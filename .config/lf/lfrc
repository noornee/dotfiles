# vim:ft=sh

# Basic vars
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set sixel true
set previewer '~/.config/lf/preview'
set hidden true


setlocal ~ hidden false # hide hidden files in the home directory
setlocal ~/workspace hidden false
# setlocal ~/media/videos/ sortby atime
# setlocal ~/media/videos/ reverse


# cmds/functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
		text/*|application/json|inode/x-empty) $EDITOR $fx ;;
		image/svg+xml) display -- $f ;;
		image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" |
			setsid -f sxiv -aio 2>/dev/null | while read -r file; do
				[ -z "$file" ] && continue
				lf -remote "send select \"$file\""
				lf -remote "send toggle"
			done &
			;;
		audio/* | application/octet-stream) mpv --audio-display=no $fx ;;
		video/*) setsid -f mpv $fx -quiet >/dev/null 2>&1 ;;
		application/pdf|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
		application/vnd*) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
		*) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done ;;
    esac
}}

cmd delete ${{
	clear; tput bold setaf 1
	set -f
	printf "$fx\n"
	tput sgr0; tput bold
	printf "delete? [y/n]: "
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}


# set wallpaper with swaybg
cmd set_wallpaper ${{
	case $(file --mime-type $f | cut -d ':' -f2 | xargs) in
		image/*)
			image_path=$(printf "%s" $f)
			sed -i "2s|.*|swaybg -i \"$image_path\"|" "$HOME/.swaybg" && setsid -f swaybg -i "$f" 2>/dev/null
			;;
		*) notify-send --urgency=critical --expire-time=5000 "ERROR: invalid file type/format" "\n<b>hint:</b> remove semi-colon \":\" from filename if its a valid image" ;;
	esac
}}


# removes executable permission from file
cmd remove_exec ${{
	chmod -x $fx
}}

cmd add_exec ${{
	chmod +x $fx
}}


#https://github.com/mwh/dragon
cmd dragon_drop ${{
	dragon-drop $fx
}}


# https://github.com/dmulholl/vimv
cmd bulkrename ${{
    vimv -- $(basename -a -- $fx)

    lf -remote "send $id load"
    lf -remote "send $id unselect"
}}

cmd edit-config ${{
    $EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
}}


# open alacritty in a floating window
cmd spawn_terminal ${{
	# bspc rule -a Alacritty state=floating --one-shot && setsid -f alacritty --working-directory $(pwd)
	setsid -f wezterm start --cwd $(pwd) 2>/dev/null
}}



cmd trash %trash-put $fx && notify-send "Trash-Put" "moved <p>$fx</p> <br>to trash"
cmd mkdir %mkdir "$@"
cmd touch $touch "$(echo $* | tr ' ' '\ '| tr ' ' '_')"

# mappings
map <c-d> delete
map D trash
map W set_wallpaper 
map C dragon_drop
# map C edit-config
map R bulkrename
map a push :touch<space>
map Y $printf "%s" "$fx" | wl-copy
map <c-n> push :mkdir<space>
map <f-2> spawn_terminal
map <a-x> add_exec
map <a-X> remove_exec
map zh setlocal ~ hidden!

# view command history
cmap <up>   cmd-history-prev
cmap <down> cmd-history-next
